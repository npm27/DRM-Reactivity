install.packages("updateR")
install.packages("installr")
installr::updateR()
library(reshape)
install.packages("dplyr")
install.packages("reshape")
install.packages("ez")
install.packages("lrd")
install.packages("vectsects")
install.packages("Vectsects")
install.packages("VectSects")
install.packages("psych")
install.packages("Hmisc")
install.packages("PsychReport")
install.packages("psychReport")
install.packages("caret")
2406*.10
12*9
14*19
108/266
19/12
12/12
14/9
12*1.5
9*1/5
9*1.5
13.5/9
18/12
15-13.5
108/266
13.5*18
108/243
13.5/9
18/12
getwd()
library(lrd)
write.csv(lrd::cued_recall_manuscript, row.names = F)
write.csv(lrd::cued_recall_manuscript, file = "lrd_test.csv", row.names = F)
table(lrd::cued_recall_manuscript$Trial_num)
View(subst(lrd::cued_recall_manuscript, lrd::cued_recall_manuscript$Trial_num == 1))
View(subset(lrd::cued_recall_manuscript, lrd::cued_recall_manuscript$Trial_num == 1))
View(subset(lrd::cued_recall_manuscript, lrd::cued_recall_manuscript$Trial_num == 2))
View(subset(lrd::cued_recall_manuscript, lrd::cued_recall_manuscript$Trial_num == 3))
View(subset(lrd::cued_recall_manuscript, lrd::cued_recall_manuscript$Trial_num == 20))
View(subset(lrd::cued_recall_manuscript, lrd::cued_recall_manuscript$Trial_num == 18))
View(subset(lrd::cued_recall_manuscript, lrd::cued_recall_manuscript$Trial_num == 17))
View(subset(lrd::cued_recall_manuscript, lrd::cued_recall_manuscript$Trial_num == 19))
View(subset(lrd::cued_recall_manuscript, lrd::cued_recall_manuscript$Trial_num == 10))
View(subset(lrd::cued_recall_manuscript, lrd::cued_recall_manuscript$Trial_num == 15))
View(subset(lrd::cued_recall_manuscript, lrd::cued_recall_manuscript$Trial_num == 16))
View(subset(lrd::cued_recall_manuscript, lrd::cued_recall_manuscript$Trial_num == 14))
View(subset(lrd::cued_recall_manuscript, lrd::cued_recall_manuscript$Trial_num == 13))
write.csv(lrd::answer_key_free2, file = "free_key.csv", row.names = F)
write.csv(lrd::free_data, file = "free_data.csv", row.names = F)
write.csv(lrd::multi_data, file = "free_m.csv", row.names = F)
write.csv(lrd:multi_answers, file = "key_m.csv", row.names = F)
write.csv(lrd::multi_answers, file = "key_m.csv", row.names = F)
multi = lrd::multi_answers
View(multi)
library(reshape)
View(multi)
multi2 = melt(multi)
View(multi2)
multi2 = melt(multi, measure.vars = c("List1", "List2", "List3", "List4", "List5", "List6"))
View(multi2)
colnames(mult2)[1:2] = c("List_Type", "Key")
colnames(multi2)[1:2] = c("List_Type", "Key")
multi2$Key = tolower(multi2$Key)
write.csv(multi2, file = "free_M_key.csv", row.names = F)
library(scales)
cite(scales)
citation(scales)
citation("scales")
install.packages("updateR")
install.packages("installr")
installr::updater()
library(lrd)
citation(package = "lrd")
371+400+156+30+65+200+400+75
3600-1697-300-1000
setwd("C:/Users/nickm/OneDrive/Documents/GitHub/DRM-Reactivity/1 Stimuli")
####Read in the stim####
dat = read.csv("Ex 1 stim.csv")
View(dat)
#subset counterbalances
A = subset(dat,
dat$Counterbalance == "A")
B = subset(dat,
dat$Counterbalance == "B")
##okay, do lists in general differ on anything?
#start w/ concreteness
tapply(A$Con, list(A$Type, A$List.Num), mean, na.rm = T)
tapply(B$Con, list(B$Type, B$List.Num), mean, na.rm = T)
#t-tests
A.cat = subst(A, A$Type == "C")
#t-tests
A.cat = subset(A, A$Type == "C")
B.cat = subst(B, B$Type == "C")
B.cat = subset(B, B$Type == "C")
t.test(A.cat$Con, B.cat$Con, paired = F)
#freq
tapply(A$Freq, list(A$Type, A$List.Num), mean, na.rm = T)
tapply(B$Freq, list(B$Type, B$List.Num), mean, na.rm = T)
#freq
tapply(A$Length, list(A$Type, A$List.Num), mean, na.rm = T)
tapply(B$Length, list(B$Type, B$List.Num), mean, na.rm = T)
A.un = subset(A, A$Type == "U")
B.un = subset(B, B$Type == "U")
t.test(A.cat$Con, B.cat$Con, paired = F) #NS
t.test(A.un$Con, B.un$Con, paired = F)
#freq
t.test(A.cat$Freq, B.cat$Freq, paired = F) #NS #p = .27
t.test(A.un$Freq, B.un$Freq, paired = F) #NS #p = .39
#length
t.test(A.cat$Length, B.cat$length, paired = F) #NS #p = .72
t.test(A.un$Freq, B.un$Freq, paired = F) #NS #p = .75
#length
tapply(A$Length, list(A$Type, A$List.Num), mean, na.rm = T)
tapply(B$Length, list(B$Type, B$List.Num), mean, na.rm = T)
options(scipen - 999)
options(scipen = 999)
#length
t.test(A.cat$Length, B.cat$length, paired = F) #NS #p = .72
#length
t.test(A.cat$Length, B.cat$Length, paired = F) #NS #p = .72
B.cat$length
#length
t.test(A.cat$Length, B.cat$Length, paired = F) #NS #p = .72
t.test(A.un$Length, B.un$Length, paired = F) #NS #p = .75
##between list types
t.test(A.cat$Con, A.un$Con, paired = F) #NS #p = .27
t.test(B.cat$Con, B.un$Con, paired = F) #NS #p = .39
#freq
t.test(A.cat$Freq, A.un$Freq, paired = F)
t.test(B.cat$Freq, B.un$Freq, paired = F)
#freq
t.test(A.cat$Freq, A.un$Freq, paired = F) #,
t.test(B.cat$Freq, B.un$Freq, paired = F)
#length
t.test(A.cat$Length, A.un$Length, paired = F) # .86
t.test(B.cat$Length, B.un$Length, paired = F) # .42
tapply(B$Length, list(B$Type, B$List.Num), mean, na.rm = T)
t.test(B.cat$Length, B.un$Length, paired = F) # .42
###Between counterbalances
##CON
t.test(A.cat$Con, B.cat$Con, paired = F) #NS #p = .27
###Between counterbalances
##CON
t.test(A.cat$Con, B.cat$Con, paired = F, var.equal = T) #NS #p = .27
#freq
t.test(A.cat$Freq, B.cat$Freq, paired = F, var.equal = T) #NS #p = .72
t.test(A.un$Length, B.un$Length, paired = F, var.equal = T) #NS #p = .14
####Means####
##okay, do lists in general differ on anything?
#con
tapply(A$Con, list(A$Type, A$List.Num), mean, na.rm = T)
#freq
tapply(A$Freq, list(A$Type, A$List.Num), mean, na.rm = T)
#length
tapply(A$Length, list(A$Type, A$List.Num), mean, na.rm = T)
tapply(A$Con, list(A$Type, A$List.Num), sd, na.rm = T)
#freq
tapply(A$Freq, list(A$Type, A$List.Num), mean, na.rm = T)
####Means####
##okay, do lists in general differ on anything?
#con
tapply(A$Con, list(A$Type, A$List.Num), mean, na.rm = T)
####Get values for Table A1####
mean(A.cat$Con); sd(A.cat$Con)
####Get values for Table A1####
mean(A.cat$Con, na.rm = T); sd(A.cat$Con, na.rm = T)
mean(B.cat$Con, na.rm = T); sd(B.cat$Con, na.rm = T)
mean(A.un$Con, na.rm = T); sd(A.un$Con, na.rm = T)
mean(B.un$Con, na.rm = T); sd(B.un$Con, na.rm = T)
#Freq
mean(A.cat$Freq, na.rm = T); sd(A.cat$Freq, na.rm = T)
mean(B.cat$Freq, na.rm = T); sd(B.cat$Freq, na.rm = T)
mean(B.un$Freq, na.rm = T); sd(B.un$Freq, na.rm = T)
mean(B.un$Freq, na.rm = T); sd(B.un$Freq, na.rm = T)
mean(A.un$Freq, na.rm = T); sd(A.un$Freq, na.rm = T)
#Length
mean(A.cat$Length, na.rm = T); sd(A.cat$Length, na.rm = T)
mean(B.cat$Length, na.rm = T); sd(B.cat$Length, na.rm = T)
mean(A.un$Length, na.rm = T); sd(A.un$Length, na.rm = T)
mean(B.un$Length, na.rm = T); sd(B.un$Length, na.rm = T)
ezanova(dat,
wid = Word,
dv = length,
between = .(Counterbalance, Type),
type = 3,
detailed = T)
library(ezanova)
library(ez)
options(scipen = 999)
ezanova(dat,
wid = Word,
dv = length,
between = .(Counterbalance, Type),
type = 3,
detailed = T)
ezANOVA(dat,
wid = Word,
dv = length,
between = .(Counterbalance, Type),
type = 3,
detailed = T)
ezANOVA(dat,
wid = Word,
dv = Length,
between = .(Counterbalance, Type),
type = 3,
detailed = T)
ezANOVA(dat,
wid = Word,
dv = Freq,
between = .(Counterbalance, Type),
type = 3,
detailed = T)
dat2 = na.omit(dat)
dat2 = na.omit(dat)
ezANOVA(dat2,
wid = Word,
dv = Freq,
between = .(Counterbalance, Type),
type = 3,
detailed = T)
#Length
ezANOVA(dat,
wid = Word,
dv = Length,
between = .(Counterbalance, Type),
type = 3,
detailed = T)
#con
ezANOVA(dat2,
wid = Word,
dv = Con,
between = .(Counterbalance, Type),
type = 3,
detailed = T)
#con
ezANOVA(dat,
wid = Word,
dv = Con,
between = .(Counterbalance, Type),
type = 3,
detailed = T)
#con
ezANOVA(dat2,
wid = Word,
dv = Con,
between = .(Counterbalance, Type),
type = 3,
detailed = T)
#freq
ezANOVA(dat2,
wid = Word,
dv = Freq,
between = .(Counterbalance, Type),
type = 3,
detailed = T) #ns (1, 77) < 1, p = .62
#con
ezANOVA(dat2,
wid = Word,
dv = Con,
between = .(Counterbalance, Type),
type = 3,
detailed = T) #ns (1, 77) = 1.70, p = .20
#Length
ezANOVA(dat,
wid = Word,
dv = Length,
between = .(Counterbalance, Type),
type = 3,
detailed = T) #(1, 92) = 2.71; p = .10
dat2 = na.omit(dat)
####Read in the stim####
dat = read.csv("Ex 1 stim.csv")
library(ez)
options(scipen = 999)
#subset counterbalances
A = subset(dat,
dat$Counterbalance == "A")
B = subset(dat,
dat$Counterbalance == "B")
####Means####
##okay, do lists in general differ on anything?
#con
tapply(A$Con, list(A$Type, A$List.Num), mean, na.rm = T)
tapply(B$Con, list(B$Type, B$List.Num), mean, na.rm = T)
tapply(A$Con, list(A$Type, A$List.Num), sd, na.rm = T)
tapply(B$Con, list(B$Type, B$List.Num), sd, na.rm = T)
#freq
tapply(A$Freq, list(A$Type, A$List.Num), mean, na.rm = T)
tapply(B$Freq, list(B$Type, B$List.Num), mean, na.rm = T)
#length
tapply(A$Length, list(A$Type, A$List.Num), mean, na.rm = T)
tapply(B$Length, list(B$Type, B$List.Num), mean, na.rm = T)
####t-tests####
A.cat = subset(A, A$Type == "C")
B.cat = subset(B, B$Type == "C")
A.un = subset(A, A$Type == "U")
B.un = subset(B, B$Type == "U")
###Between counterbalances
##CON
t.test(A.cat$Con, B.cat$Con, paired = F, var.equal = T) #NS #p = .27
t.test(A.un$Con, B.un$Con, paired = F, var.equal = T) #NS #p = .39
#freq
t.test(A.cat$Freq, B.cat$Freq, paired = F, var.equal = T) #NS #p = .72
t.test(A.un$Freq, B.un$Freq, paired = F, var.equal = T) #NS #p = .75
#length
t.test(A.cat$Length, B.cat$Length, paired = F, var.equal = T) #NS #p = .36
t.test(A.un$Length, B.un$Length, paired = F, var.equal = T) #NS #p = .14
##between list types
#CON
t.test(A.cat$Con, A.un$Con, paired = F, var.equal = T) #SIG #p = .006 #uncategorized lists less concrete
t.test(B.cat$Con, B.un$Con, paired = F, var.equal = T) #SIG #p = .02
#freq
t.test(A.cat$Freq, A.un$Freq, paired = F, var.equal = T) # .86
t.test(B.cat$Freq, B.un$Freq, paired = F, var.equal = T) # .42
#length
t.test(A.cat$Length, A.un$Length, paired = F, var.equal = T) # .92
t.test(B.cat$Length, B.un$Length, paired = F, var.equal = T) # .02
####Get values for Table A1####
#Con
mean(A.cat$Con, na.rm = T); sd(A.cat$Con, na.rm = T)
mean(B.cat$Con, na.rm = T); sd(B.cat$Con, na.rm = T)
mean(A.un$Con, na.rm = T); sd(A.un$Con, na.rm = T)
mean(B.un$Con, na.rm = T); sd(B.un$Con, na.rm = T)
#Freq
mean(A.cat$Freq, na.rm = T); sd(A.cat$Freq, na.rm = T)
mean(B.cat$Freq, na.rm = T); sd(B.cat$Freq, na.rm = T)
mean(A.un$Freq, na.rm = T); sd(A.un$Freq, na.rm = T)
mean(B.un$Freq, na.rm = T); sd(B.un$Freq, na.rm = T)
#Length
mean(A.cat$Length, na.rm = T); sd(A.cat$Length, na.rm = T)
mean(B.cat$Length, na.rm = T); sd(B.cat$Length, na.rm = T)
mean(A.un$Length, na.rm = T); sd(A.un$Length, na.rm = T)
mean(B.un$Length, na.rm = T); sd(B.un$Length, na.rm = T)
#Length
ezANOVA(dat,
wid = Word,
dv = Length,
between = .(Counterbalance, Type),
type = 3,
detailed = T) #(1, 92) = 2.71; p = .10
dat2 = na.omit(dat)
#freq
ezANOVA(dat2,
wid = Word,
dv = Freq,
between = .(Counterbalance, Type),
type = 3,
detailed = T) #ns (1, 77) < 1, p = .62
#con
ezANOVA(dat2,
wid = Word,
dv = Con,
between = .(Counterbalance, Type),
type = 3,
detailed = T) #ns (1, 77) = 1.70, p = .20
####Ex 2####
####Ex 2####
Dat3 = read.csv("Ex 2 Stim.csv")
library(ez)
options(scipen = 999)
####Ex 2####
Dat3 = read.csv("Ex 2 Stim.csv")
####Ex 2####
dat = read.csv("Ex 2 Stim.csv")
A = subset(dat, dat$Counterbalance == "A")
B = subset(dat, dat$Counterbalance == "A")
tapply(dat$BAS, dat$Counterbalance, mean)
tapply(dat$BAS, dat$Counterbalance, sd)
tapply(dat$Length, dat$Counterbalance, mean)
tapply(dat$Length, dat$Counterbalance, sd)
tapply(dat$Con, dat$Counterbalance, mean)
dat$Con = as.numeric(dat$Con)
tapply(dat$Con, dat$Counterbalance, mean, na.rm = T)
tapply(dat$Con, dat$Counterbalance, sd, na.rm = T)
tapply(dat$Freq, dat$Counterbalance, mean)
tapply(dat$Freq, dat$Counterbalance, sd)
