#get sds
sd(iJOL2$dprime); sd(gJOL2$dprime); sd(Read2$dprime)
sd(iJOL2$c.1); sd(gJOL2$c.1); sd(Read2$c.1)
###d'
##ANOVA
ezANOVA(ex2_p,
wid = i,
between = e,
dv = dprime,
type = 3,
detailed = T) #marginal
#post hocs
temp = t.test(iJOL2$dprime, gJOL2$dprime, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #marginal
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
temp = t.test(iJOL2$dprime, Read2$dprime, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #barely sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
temp = t.test(gJOL2$dprime, Read2$dprime, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #non-sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
##C
#ANOVA
ezANOVA(ex2_p,
wid = i,
between = e,
dv = c.1,
type = 3,
detailed = T) #Sig
#Post-hocs
temp = t.test(iJOL2$c.1, gJOL2$c.1, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #No difference in C
temp = t.test(iJOL2$c.1, Read2$c.1, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #No difference in C
temp = t.test(gJOL2$c.1, Read2$c.1, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #non-sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #No difference in C
####Ex 2 -- False####
##Make Encoding group Subsets
iJOL3 = subset(ex2_f,
ex2_f$e == "item")
gJOL3 = subset(ex2_f,
ex2_f$e == "global")
Read3 = subset(ex2_f,
ex2_f$e == "read")
###get means
mean(iJOL3$dprime); mean(gJOL3$dprime); mean(Read3$dprime) #.36 vs -.09 vs .32
mean(iJOL3$c.1); mean(gJOL3$c.1); mean(Read3$c.1) #.52 vs 0.68 vs 0.51
#get sds
sd(iJOL3$dprime); sd(gJOL3$dprime); sd(Read3$dprime)
sd(iJOL3$c.1); sd(gJOL3$c.1); sd(Read3$c.1)
###d'
##ANOVA
ezANOVA(ex2_p,
wid = i,
between = e,
dv = dprime,
type = 3,
detailed = T) #marginal
#post-hocs
temp = t.test(iJOL3$dprime, gJOL3$dprime, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #marginal
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
temp = t.test(iJOL3$dprime, Read3$dprime, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #barely sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
temp = t.test(gJOL3$dprime, Read3$dprime, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #non-sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
##C
#ANOVA
ezANOVA(ex2_p,
wid = i,
between = e,
dv = c.1,
type = 3,
detailed = T) #Sig
#Post-hocs
temp = t.test(iJOL3$c.1, gJOL3$c.1, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #No difference in C
temp = t.test(iJOL3$c.1, Read3$c.1, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #No difference in C
temp = t.test(gJOL3$c.1, Read3$c.1, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #non-sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #No difference in C
###get means
mean(iJOL3$dprime); mean(gJOL3$dprime); mean(Read3$dprime) #.36 vs -.09 vs .32
mean(iJOL3$c.1); mean(gJOL3$c.1); mean(Read3$c.1) #.52 vs 0.68 vs 0.51
####Now for Experiment 2####
ex2 = read.csv("Data/sd ex2b.csv")
table(ex2$Item_type)
####Set up####
##load libraries
library(psycho)
library(ez)
library(reshape)
library(psychReport)
##read in data
ex1 = read.csv("Data/sd ex1b.csv")
####Get the data in the right shape####
##For each participant, it looks like I need to sum total for each of the four categories
##Hits, False alarms, misses, and correct rejections
##Make the columns
ex1$control = ex1$Direction
ex1$control[ex1$control == "Related"] = "Presented"
ex1$control[ex1$control == "Unrelated"] = "Presented"
##first, code each trial as being one of the categories
#not presented, 0 == correct rejection
#not presented, 1 == False alarm
#presented, 0 == miss
#presented, 1 == hit
###First, Experiment 1
##Start w/ hits
hits1 = subset(ex1,
ex1$control == "Presented" & ex1$scored == 1)
hits1$sig_type = rep("hit")
miss1 = subset(ex1,
ex1$control == "Presented" & ex1$scored == 0)
miss1$sig_type = rep("miss")
fa1 = subset(ex1,
ex1$control == "Control" & ex1$scored == 1)
fa1$sig_type = rep("fa")
cr1 = subset(ex1,
ex1$control == "Control" & ex1$scored == 0)
cr1$sig_type = rep("cr")
##put it all back together
combined1 = rbind(hits1, miss1, fa1, cr1)
####Now sum the categories for each participant####
##Loop time?
sig_detect = data.frame()
for(i in unique(combined1$Username)){
#loop through participants
temp = subset(combined1,
combined1$Username == i)
#sum hits
hits = subset(temp,
temp$sig_type == "hit")
h = length(hits$sig_type)
#sum misses
misses = subset(temp,
temp$sig_type == "miss")
m = length(misses$sig_type)
#false alarms
fas = subset(temp,
temp$sig_type == "fa")
f = length(fas$sig_type)
#correct rejections
crs = subset(temp,
temp$sig_type == "cr")
c = length(crs$sig_type)
#get participant's encoding group
e = temp$Encoding[1]
#now slap it back together
temp2 = data.frame(i, e, h, m, f, c)
sig_detect = rbind(sig_detect, temp2)
}
####compute indices####
indices = data.frame(dprime(sig_detect$h, sig_detect$f, sig_detect$m, sig_detect$c))
ex1_final = cbind(sig_detect, indices)
####Now for Experiment 2####
ex2 = read.csv("Data/sd ex2b.csv")
table(ex2$Item_type)
##first, code each trial as being one of the categories
#List Item Control, 0 == correct rejection
#List Item Control, 1 == False alarm
#List Item, 0 == miss
#List Item, 1 == hit
##Start w/ presented and non-presented items
hits2 = subset(ex2,
ex2$Item_type == "List Item" & ex2$scored == 1)
hits2$sig_type = rep("hit")
miss2 = subset(ex2,
ex2$Item_type == "List Item" & ex2$scored == 0)
miss2$sig_type = rep("miss")
fa2 = subset(ex2,
ex2$Item_type == "List Item Control" & ex2$scored == 1)
fa2$sig_type = rep("fa")
cr2 = subset(ex2,
ex2$Item_type == "List Item Control" & ex2$scored == 0)
cr2$sig_type = rep("cr")
##Now DRM items
#Critical Lures
hits_cl = subset(ex2,
ex2$Item_type == "Critical Lure" & ex2$scored == 1)
hits_cl$sig_type = rep("hit")
miss_cl = subset(ex2,
ex2$Item_type == "Critical Lure" & ex2$scored == 0)
miss_cl$sig_type = rep("miss")
#Critical lure controls
fa2_clc = subset(ex2,
ex2$Item_type == "Critical Lure Control" & ex2$scored == 1)
fa2_clc$sig_type = rep("fa_clc")
cr2_clc = subset(ex2,
ex2$Item_type == "Critical Lure Control" & ex2$scored == 0)
cr2_clc$sig_type = rep("cr_clc")
##put it all back together
combined2 = rbind(hits2, miss2, fa2, cr2)
####Now sum the categories for each participant####
###Presented
sig_detect = data.frame()
for(i in unique(combined2$Username)){
#loop through participants
temp = subset(combined2,
combined2$Username == i)
##Presented items
#sum hits
hits = subset(temp,
temp$sig_type == "hit")
h = length(hits$sig_type)
#sum misses
misses = subset(temp,
temp$sig_type == "miss")
m = length(misses$sig_type)
##non presented items
#false alarms
fas = subset(temp,
temp$sig_type == "fa")
f = length(fas$sig_type)
#correct rejections
crs = subset(temp,
temp$sig_type == "cr")
c = length(crs$sig_type)
#get participant's encoding group
e = temp$encoding[1]
#now slap it back together
temp3 = data.frame(i, e, h, m, f, c)
sig_detect = rbind(sig_detect, temp3)
}
####compute indices####
indices = dprime(sig_detect$h, sig_detect$f, sig_detect$m, sig_detect$c)
ex2_presented = cbind(sig_detect, indices)
##False Memory
#Treat critical lures as correct memory
combined3 = rbind(hits_cl, miss_cl, fa2_clc, cr2_clc)
View(combined3)
tapply(combined3$scored, combined3$Item_type)
tapply(combined3$scored, combined3$Item_type, mean)
tapply(combined2$scored, combined2$Item_type, mean)
sig_detect = data.frame()
View(crs)
for(i in unique(combined3$Username)){
#loop through participants
temp = subset(combined3,
combined3$Username == i)
##Presented items
#sum hits
hits = subset(temp,
temp$sig_type == "hit")
h = length(hits$sig_type)
#sum misses
misses = subset(temp,
temp$sig_type == "miss")
m = length(misses$sig_type)
##non presented items
#false alarms
fas = subset(temp,
temp$sig_type == "fa_clc")
f = length(fas$sig_type)
#correct rejections
crs = subset(temp,
temp$sig_type == "cr_clc")
c = length(crs$sig_type)
#get participant's encoding group
e = temp$encoding[1]
#now slap it back together
temp3 = data.frame(i, e, h, m, f, c)
sig_detect = rbind(sig_detect, temp3)
}
View(sig_detect)
####compute indices####
indices = dprime(sig_detect$h, sig_detect$f, sig_detect$m, sig_detect$c)
ex3_false = cbind(sig_detect, indices)
View(ex3_false)
####compute indices####
indices = dprime(sig_detect$h, sig_detect$f, sig_detect$m, sig_detect$c)
ex2_false = cbind(sig_detect, indices)
View(ex2_false)
tapply(ex2_false$dprime, ex2_false$e, mean)
####Write everything to .csv for analyses####
#write.csv(ex1_final, file = "Sig Data/ex1_sig.csv", row.names = F)
#write.csv(ex2_presented, file = "Sig Data/ex2_sig_pres.csv", row.names = F)
write.csv(ex2_false, file = "Sig Data/ex2_sig_false.csv", row.names = F)
####Read in the data####
ex1 = read.csv("Sig Data/ex1_sig.csv")
ex2_p = read.csv("Sig Data/ex2_sig_pres.csv")
ex2_f = read.csv("Sig Data/ex2_sig_false.csv")
####Read in the data####
ex1 = read.csv("Sig Data/ex1_sig.csv")
ex2_p = read.csv("Sig Data/ex2_sig_pres.csv")
ex2_f = read.csv("Sig Data/ex2_sig_false.csv")
##turn off scientific notation
options(scipen = 999)
#load libraries
library(ez)
####Ex 2####
###Make Encoding group Subsets
iJOL = subset(ex1,
ex1$e == "Item_JOL")
gJOL = subset(ex1,
ex1$e == "Global_JOL")
Read = subset(ex1,
ex1$e == "Read")
###get means
mean(iJOL$dprime); mean(gJOL$dprime); mean(Read$dprime) #2.76 vs. 1.98 vs. 1.91
mean(iJOL$c.1); mean(gJOL$c.1); mean(Read$c.1) #.03 vs. .22 vs. .16
#get sds
sd(iJOL$dprime); sd(gJOL$dprime); sd(Read$dprime)
sd(iJOL$c.1); sd(gJOL$c.1); sd(Read$c.1)
##d'
#ANOVA
ezANOVA(ex1,
wid = i,
between = e,
dv = dprime,
type = 3,
detailed = T) #sig
#post hoc
temp = t.test(iJOL$dprime, gJOL$dprime, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
temp = t.test(iJOL$dprime, Read$dprime, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
temp = t.test(gJOL$dprime, Read$dprime, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #non-sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#Only Item JOLs improve discriminability
##C
ezANOVA(ex1,
wid = i,
between = e,
dv = c.1,
type = 3,
detailed = T) #marginal
temp = t.test(iJOL$c.1, gJOL$c.1, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic  #sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
temp = t.test(iJOL$c.1, Read$c.1, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #non-sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
temp = t.test(gJOL$c.1, Read$c.1, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #non-sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#####Ex 2 -- Presented####
###Make Encoding group Subsets
iJOL2 = subset(ex2_p,
ex2_p$e == "item")
gJOL2 = subset(ex2_p,
ex2_p$e == "global")
Read2 = subset(ex2_p,
ex2_p$e == "read")
###get means
mean(iJOL2$dprime); mean(gJOL2$dprime); mean(Read2$dprime) #2.05 vs 1.71 vs 1.64
mean(iJOL2$c.1); mean(gJOL2$c.1); mean(Read2$c.1) #-0.10 vs 0.11 vs .23
#get sds
sd(iJOL2$dprime); sd(gJOL2$dprime); sd(Read2$dprime)
sd(iJOL2$c.1); sd(gJOL2$c.1); sd(Read2$c.1)
###d'
##ANOVA
ezANOVA(ex2_p,
wid = i,
between = e,
dv = dprime,
type = 3,
detailed = T) #marginal
#post hocs
temp = t.test(iJOL2$dprime, gJOL2$dprime, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #marginal
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
temp = t.test(iJOL2$dprime, Read2$dprime, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #barely sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
temp = t.test(gJOL2$dprime, Read2$dprime, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #non-sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
##C
#ANOVA
ezANOVA(ex2_p,
wid = i,
between = e,
dv = c.1,
type = 3,
detailed = T) #Sig
#Post-hocs
temp = t.test(iJOL2$c.1, gJOL2$c.1, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #No difference in C
temp = t.test(iJOL2$c.1, Read2$c.1, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #No difference in C
temp = t.test(gJOL2$c.1, Read2$c.1, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #non-sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #No difference in C
####Ex 2 -- False####
##Make Encoding group Subsets
iJOL3 = subset(ex2_f,
ex2_f$e == "item")
gJOL3 = subset(ex2_f,
ex2_f$e == "global")
Read3 = subset(ex2_f,
ex2_f$e == "read")
###get means
mean(iJOL3$dprime); mean(gJOL3$dprime); mean(Read3$dprime) #.36 vs -.09 vs .32
mean(iJOL3$c.1); mean(gJOL3$c.1); mean(Read3$c.1) #.52 vs 0.68 vs 0.51
#get sds
sd(iJOL3$dprime); sd(gJOL3$dprime); sd(Read3$dprime)
sd(iJOL3$c.1); sd(gJOL3$c.1); sd(Read3$c.1)
###d'
##ANOVA
ezANOVA(ex2_p,
wid = i,
between = e,
dv = dprime,
type = 3,
detailed = T) #marginal
#post-hocs
temp = t.test(iJOL3$dprime, gJOL3$dprime, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #marginal
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
temp = t.test(iJOL3$dprime, Read3$dprime, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #barely sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
temp = t.test(gJOL3$dprime, Read3$dprime, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #non-sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
##C
#ANOVA
ezANOVA(ex2_p,
wid = i,
between = e,
dv = c.1,
type = 3,
detailed = T) #Sig
#Post-hocs
temp = t.test(iJOL3$c.1, gJOL3$c.1, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #No difference in C
temp = t.test(iJOL3$c.1, Read3$c.1, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #No difference in C
temp = t.test(gJOL3$c.1, Read3$c.1, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #non-sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #No difference in C
###get means
mean(iJOL3$dprime); mean(gJOL3$dprime); mean(Read3$dprime) #.36 vs -.09 vs .32
mean(iJOL3$c.1); mean(gJOL3$c.1); mean(Read3$c.1) #.52 vs 0.68 vs 0.51
combined3 = rbind(hits_cl, miss_cl, fa2_clc, cr2_clc)
length(unique(ex1$i))
