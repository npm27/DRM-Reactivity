apply(item.wide, mean, 2)
##get values for Table A1
apply(item.wide, 2, mean)
##get values for Table A1
apply(item.wide, 2, sd)
nrow(item.wide)
##get values for Table A1
(apply(item.wide, 2, sd) / sqrt(nrow(item.wide)))
##get values for Table A1
(apply(item.wide, 2, sd) / sqrt(nrow(item.wide))) * 1.96
(apply(global.wide, 2, sd) / sqrt(nrow(global.wide))) * 1.96
(apply(read.wide, 2, sd) / sqrt(nrow(read.wide))) * 1.96
apply(item.wide, 2, sd)
apply(global.wide, 2, sd)
apply(read.wide, 2, sd)
####Set up####
##read in data
dat = read.csv("Data/ex1a.csv")
##load libraries
library(reshape)
library(ez)
library(psychReport)
##turn off scientific notation
options(scipen = 999)
##fix column names
colnames(dat)[1:2] = c("ID", "List_Type")
colnames(dat)[4] = "scored"
#get ns
global = subset(dat,
dat$encoding == "global")
length(unique(global$ID)) #38 - 1
table(global$ID)
item = subset(dat,
dat$encoding == "item")
table(item$ID)
#remove participant who didn't complete experiment
dat = subset(dat,
dat$ID != "653b9ed2c4b3466a16bc6e05")
length(unique(item$ID)) #37 - 1
read = subset(dat,
dat$encoding == "read")
table(read$ID)
length(unique(read$ID)) #39
##any more cheaters/slackers?
global.wide = cast(global, ID ~ List_Type, mean)
item.wide = cast(item, ID ~ List_Type, mean)
read.wide = cast(read, ID ~ List_Type, mean) #Nope, finally looks good!
####Descriptives####
tapply(dat$scored, dat$encoding, mean)
tapply(dat$scored, list(dat$encoding, dat$List_Type), mean)
model1 = ezANOVA(dat,
wid = ID,
within = List_Type,
between = encoding,
dv = scored,
type = 3,
detailed = T)
model1
#get MSE here
model1$ANOVA$MSE = model1$ANOVA$SSd/model1$ANOVA$DFd
model1$ANOVA$MSE
aovEffectSize(model1, effectSize = "pes")
##marginal main effect encoding
##signicant effect list type
##significant interaction
tapply(dat$scored, dat$encoding, mean) #encoding
tapply(dat$scored, dat$List_Type, mean) #list type
tapply(dat$scored, list(dat$encoding, dat$List_Type), mean) #interaction
####Post-hocs####
dat.ph = cast(dat, ID ~ encoding, mean)
#break down marginal main effect
temp = t.test(dat.ph$global, dat.ph$item, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #SIG
mean(dat.ph$global, na.rm = T); mean(dat.ph$item, na.rm = T)
sd(dat.ph$global, na.rm = T); sd(dat.ph$item, na.rm = T)
temp = t.test(dat.ph$global, dat.ph$read, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #non-sig
##get pbic
pbic1 = dat.ph[ , c(1,2)]
pbic2 = dat.ph[ , c(1,4)]
pbic1 = na.omit(pbic1)
pbic2 = na.omit(pbic2)
pbic1$encoding = rep("global")
pbic2$encoding = rep("read")
colnames(pbic1)[2] = "score"
colnames(pbic2)[2] = "score"
pbic3 = rbind(pbic1, pbic2)
model = ezANOVA(pbic3,
wid = ID,
between = encoding,
dv = score,
type = 3,
detailed = T)
model
temp = t.test(dat.ph$item, dat.ph$read, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #non-sig
####Interaction####
##related lists
temp = t.test(global.wide$Related, item.wide$Related, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #non-sig
##get pbics
pbic1 = global.wide[ , c(1:2)]
pbic2 = item.wide[ , c(1:2)]
pbic1$encoding = rep("global")
pbic2$encoding = rep("item")
pbic3 = rbind(pbic1, pbic2)
model = ezANOVA(pbic3,
wid = ID,
between = encoding,
dv = Related,
type = 3,
detailed = T)
model
temp = t.test(global.wide$Related, read.wide$Related, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #sig
#get means/sd for d
mean(global.wide$Related); mean(read.wide$Related)
sd(global.wide$Related); sd(read.wide$Related)
temp = t.test(item.wide$Related, read.wide$Related, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #non-sig
##making global JOLs boosts free-recall of related lists
##unrelated
temp = t.test(global.wide$Unrelated, item.wide$Unrelated, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #global boosted vs item
#get means/sds
mean(global.wide$Unrelated); mean(item.wide$Unrelated)
sd(global.wide$Unrelated); sd(item.wide$Unrelated)
temp = t.test(global.wide$Unrelated, read.wide$Unrelated, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #non-sig
pbic1 = global.wide[ , c(1, 3)]
pbic2 = read.wide[ , c(1, 3)]
pbic1$encoding = rep("global")
pbic2$encoding = rep("read")
pbic3 = rbind(pbic1, pbic2)
model = ezANOVA(pbic3,
wid = ID,
between = encoding,
dv = Unrelated,
type = 3,
detailed = T)
model
temp = t.test(item.wide$Unrelated, read.wide$Unrelated, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #non-sig
##get 95% CI values for Table A1
(apply(item.wide, 2, sd) / sqrt(nrow(item.wide))) * 1.96
(apply(global.wide, 2, sd) / sqrt(nrow(global.wide))) * 1.96
(apply(read.wide, 2, sd) / sqrt(nrow(read.wide))) * 1.96
##write means and CIs to file for Figure 1
##get 95% CI values for Table A1
x1 = (apply(item.wide, 2, sd) / sqrt(nrow(item.wide))) * 1.96
x2 = (apply(global.wide, 2, sd) / sqrt(nrow(global.wide))) * 1.96
x3 = (apply(read.wide, 2, sd) / sqrt(nrow(read.wide))) * 1.96
####Set up####
##read in data
dat = read.csv("Data/ex1a.csv")
View(dat)
##load libraries
library(reshape)
library(ez)
library(psychReport)
##turn off scientific notation
options(scipen = 999)
##fix column names
colnames(dat)[1:2] = c("ID", "List_Type")
colnames(dat)[4] = "scored"
#get ns
global = subset(dat,
dat$encoding == "global")
length(unique(global$ID)) #38 - 1
table(global$ID)
item = subset(dat,
dat$encoding == "item")
table(item$ID)
#remove participant who didn't complete experiment
dat = subset(dat,
dat$ID != "653b9ed2c4b3466a16bc6e05")
length(unique(item$ID)) #37 - 1
read = subset(dat,
dat$encoding == "read")
table(read$ID)
length(unique(read$ID)) #39
##any more cheaters/slackers?
global.wide = cast(global, ID ~ List_Type, mean)
item.wide = cast(item, ID ~ List_Type, mean)
read.wide = cast(read, ID ~ List_Type, mean) #Nope, finally looks good!
####Descriptives####
tapply(dat$scored, dat$encoding, mean)
tapply(dat$scored, list(dat$encoding, dat$List_Type), mean)
####Set up####
##read in data
dat = read.csv("Data/ex1a.csv")
dat2 = read.csv("Data/ex1a_fixed.csv")
####Set up####
##read in data
dat = read.csv("Data/ex1a.csv")
dat2 = read.csv("Data/ex1a_fixed.csv")
##load libraries
library(reshape)
library(ez)
library(psychReport)
##turn off scientific notation
options(scipen = 999)
##fix column names
colnames(dat)[1:2] = c("ID", "List_Type")
colnames(dat)[4] = "scored"
#get ns
global = subset(dat,
dat$encoding == "global")
length(unique(global$ID)) #38 - 1
table(global$ID)
item = subset(dat,
dat$encoding == "item")
table(item$ID)
#remove participant who didn't complete experiment
dat = subset(dat,
dat$ID != "653b9ed2c4b3466a16bc6e05")
dat2 = subset(dat2,
dat2$ID != "653b9ed2c4b3466a16bc6e05")
####Set up####
##read in data
dat = read.csv("Data/ex1a.csv")
dat2 = read.csv("Data/ex1a_fixed.csv")
View(dat2)
View(dat2)
View(dat2)
View(dat2)
dat2 = dat2[ , c(1, 4:5, 2)]
View(dat2)
View(dat)
View(dat2)
####Set up####
##read in data
dat = read.csv("Data/ex1a.csv")
dat2 = read.csv("Data/ex1a_fixed.csv")
##load libraries
library(reshape)
library(ez)
library(psychReport)
##turn off scientific notation
options(scipen = 999)
##fix column names
colnames(dat)[1:2] = c("ID", "List_Type")
colnames(dat)[4] = "scored"
dat2 = dat2[ , c(1, 4:5, 2)]
colnames(dat2)[1:2] = c("ID", "List_Type")
colnames(dat2)[4] = "scored"
#get ns
global = subset(dat,
dat$encoding == "global")
length(unique(global$ID)) #38 - 1
table(global$ID)
item = subset(dat,
dat$encoding == "item")
table(item$ID)
#remove participant who didn't complete experiment
dat = subset(dat,
dat$ID != "653b9ed2c4b3466a16bc6e05")
dat2 = subset(dat2,
dat2 != "653b9ed2c4b3466a16bc6e05")
length(unique(item$ID)) #37 - 1
read = subset(dat,
dat$encoding == "read")
table(read$ID)
length(unique(read$ID)) #39
##any more cheaters/slackers?
global.wide = cast(global, ID ~ List_Type, mean)
item.wide = cast(item, ID ~ List_Type, mean)
read.wide = cast(read, ID ~ List_Type, mean) #Nope, finally looks good!
####Descriptives####
tapply(dat$scored, dat$encoding, mean)
tapply(dat$scored, list(dat$encoding, dat$List_Type), mean)
tapply(dat2$scored, list(dat2$encoding, dat2$List_Type), mean)
getwd()
####Set up####
##read in data
dat = read.csv("Data/ex1a.csv")
dat2 = read.csv("Data/ex1a_fixed.csv")
##load libraries
library(reshape)
library(ez)
library(psychReport)
##turn off scientific notation
options(scipen = 999)
##fix column names
colnames(dat)[1:2] = c("ID", "List_Type")
colnames(dat)[4] = "scored"
dat2 = dat2[ , c(1, 4:5, 2)]
colnames(dat2)[1:2] = c("ID", "List_Type")
colnames(dat2)[4] = "scored"
#get ns
global = subset(dat,
dat$encoding == "global")
length(unique(global$ID)) #38 - 1
table(global$ID)
item = subset(dat,
dat$encoding == "item")
table(item$ID)
#remove participant who didn't complete experiment
dat = subset(dat,
dat$ID != "653b9ed2c4b3466a16bc6e05")
dat2 = subset(dat2,
dat2 != "653b9ed2c4b3466a16bc6e05")
length(unique(item$ID)) #37 - 1
read = subset(dat,
dat$encoding == "read")
table(read$ID)
length(unique(read$ID)) #39
##any more cheaters/slackers?
global.wide = cast(global, ID ~ List_Type, mean)
item.wide = cast(item, ID ~ List_Type, mean)
read.wide = cast(read, ID ~ List_Type, mean) #Nope, looks good!
####Descriptives####
tapply(dat$scored, dat$encoding, mean)
tapply(dat$scored, list(dat$encoding, dat$List_Type), mean)
#tapply(dat2$scored, list(dat2$encoding, dat2$List_Type), mean) #okay, either scoring method works!
model1 = ezANOVA(dat,
wid = ID,
within = List_Type,
between = encoding,
dv = scored,
type = 3,
detailed = T)
model1
#get MSE here
model1$ANOVA$MSE = model1$ANOVA$SSd/model1$ANOVA$DFd
model1$ANOVA$MSE
aovEffectSize(model1, effectSize = "pes")
aovEffectSize(model1, effectSize = "pes")
####Interaction####
##related lists
temp = t.test(global.wide$Related, item.wide$Related, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
sd(global.wide$Unrelated); sd(item.wide$Related)
sd(global.wide$Unrelated); mean(item.wide$Related)
mean(global.wide$Unrelated); sd(item.wide$Related)
mean(global.wide$Related); sd(item.wide$Related)
####Interaction####
##related lists
temp = t.test(global.wide$Related, item.wide$Related, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
mean(global.wide$Related); mean(item.wide$Related)
temp = t.test(item.wide$Related, read.wide$Related, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
tapply(dat$scored, list(dat$encoding, dat$List_Type), mean) #interaction
####Interaction####
##related lists
temp = t.test(global.wide$Related, item.wide$Related, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #non-sig
####Interaction####
##related lists
temp = t.test(global.wide$Related, read$Related, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
####Interaction####
##related lists
temp = t.test(global.wide$Related, read$Related, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
####Interaction####
##related lists
temp = t.test(global.wide$Related, read.wide$Related, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #non-sig
mean(global.wide$Related); mean(read.wide$Related)
sd(global.wide$Related); sd(read.wide$Related)
tapply(dat$scored, list(dat$encoding, dat$List_Type), mean) #interaction
####Interaction####
##related lists
#global vs read
temp = t.test(global.wide$Related, item.wide$Related, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp = t.test(global.wide$Related, read.wide$Related, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(item.wide$Related, read.wide$Related, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
####Interaction####
##related lists
#global vs read
temp = t.test(global.wide$Related, item.wide$Related, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
####Interaction####
##related lists
#global vs read
temp = t.test(global.wide$Related, item.wide$Related, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
sd(global.wide$Related); sd(read.wide$Related)
sd(global.wide$Related); sd(item.wide$Related)
##unrelated
temp = t.test(global.wide$Unrelated, item.wide$Unrelated, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
tapply(dat$scored, list(dat$encoding, dat$List_Type), mean) #interaction
temp = t.test(global.wide$Unrelated, read.wide$Unrelated, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(item.wide$Unrelated, read.wide$Unrelated, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(global.wide$Unrelated, read.wide$Unrelated, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(item.wide$Unrelated, read.wide$Unrelated, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(item.wide$Unrelated, read.wide$Unrelated, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
sd(item.wide$Unrelated)
sd(item.wide$Unrelated); sd(read.wide$Unrelated)
mean(item.wide$Unrelated); sd(read.wide$Unrelated)
sd(item.wide$Unrelated); mean(read.wide$Unrelated)
View(dat)
####Set up####
##read in data
dat = read.csv("Data/ex1a.csv")
dat2 = read.csv("Data/ex1a_fixed.csv")
##load libraries
library(reshape)
library(ez)
library(psychReport)
##turn off scientific notation
options(scipen = 999)
##fix column names
colnames(dat)[1:2] = c("ID", "List_Type")
colnames(dat)[4] = "scored"
dat2 = dat2[ , c(1, 4:5, 2)]
colnames(dat2)[1:2] = c("ID", "List_Type")
colnames(dat2)[4] = "scored"
#get ns
global = subset(dat,
dat$encoding == "global")
length(unique(global$ID)) #38 - 1
table(global$ID)
item = subset(dat,
dat$encoding == "item")
table(item$ID)
#remove participant who didn't complete experiment
dat = subset(dat,
dat$ID != "653b9ed2c4b3466a16bc6e05")
dat2 = subset(dat2,
dat2 != "653b9ed2c4b3466a16bc6e05")
length(unique(item$ID)) #37 - 1
read = subset(dat,
dat$encoding == "read")
table(read$ID)
length(unique(read$ID)) #39
##any more cheaters/slackers?
global.wide = cast(global, ID ~ List_Type, mean)
item.wide = cast(item, ID ~ List_Type, mean)
read.wide = cast(read, ID ~ List_Type, mean) #Nope, looks good!
####Descriptives####
tapply(dat$scored, dat$encoding, mean)
tapply(dat$scored, list(dat$encoding, dat$List_Type), mean)
#tapply(dat2$scored, list(dat2$encoding, dat2$List_Type), mean) #okay, either scoring method works!
model1 = ezANOVA(dat,
wid = ID,
within = List_Type,
between = encoding,
dv = scored,
type = 3,
detailed = T)
model1
#get MSE here
model1$ANOVA$MSE = model1$ANOVA$SSd/model1$ANOVA$DFd
model1$ANOVA$MSE
aovEffectSize(model1, effectSize = "pes")
##marginal main effect encoding
##signicant effect list type
##significant interaction
tapply(dat$scored, dat$encoding, mean) #encoding
tapply(dat$scored, dat$List_Type, mean) #list type
tapply(dat$scored, list(dat$encoding, dat$List_Type), mean) #interaction
####Any interactions w/ version?####
vs = read.csv("1a versions.csv")
dat.vs = merge(dat, vs, by = "username")
dat.vs = merge(dat, vs, by.x = "Username")
View(vs)
View(dat)
dat.vs = merge(dat, vs, by.x = "Username", by.y = "ID")
View(dat)
dat.vs = merge(dat, vs, by.x = "ID", by.y = "Username")
View(dat.vs)
colnames(dat.vs)[5] = "version"
model.v = ezANOVA(dat.vs,
wid = ID,
within = List_Type,
between = .(encoding, version),
dv = scored,
type = 3,
detailed = T)
model.v
model.v #no interactions or main effects of sequence
