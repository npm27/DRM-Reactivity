setwd('..')
####Clean up the data files####
##Drop unused columns
dat = dat[ , -c(2:7, 9:10, 12, 20:23, 28:33, 35)]
dat2 = dat2[ , -c(2:7, 9:10, 12, 20:23, 28:33, 35)]
dat3 = dat3[ , -c(2:7, 9:10, 12, 20:23, 28:34)]
#Now remove instruction trials
dat = subset(dat,
dat$Procedure.Trial.Type != "Instruct")
dat2 = subset(dat2,
dat2$Procedure.Trial.Type != "Instruct")
dat3 = subset(dat3,
dat3$Procedure.Trial.Type != "Instruct")
#Now remove filler task
dat = subset(dat,
dat$Procedure.Trial.Type != "FreeRecall")
dat2 = subset(dat2,
dat2$Procedure.Trial.Type != "FreeRecall")
dat3 = subset(dat3,
dat3$Procedure.Trial.Type != "FreeRecall")
####Score the data####
##Start w/ item
dat.recog = subset(dat,
dat$Procedure.Trial.Type == "Likert")
dat.recog$Response.Response[dat.recog$Response.Response == "NO"] = "Non-Presented"
dat.recog$Response.Response[dat.recog$Response.Response == "YES"] = "Presented"
dat.recog$key = dat.recog$Stimuli.Stimuli.Notes
dat.recog$key[dat.recog$key == "Critical Lure"] = "Non-Presented"
dat.recog$key[dat.recog$key == "List Item Control"] = "Non-Presented"
dat.recog$key[dat.recog$key == "Critical Lure Control"] = "Non-Presented"
dat.recog$key[dat.recog$key == "List Item"] = "Presented"
dat.recog$scored = as.numeric(dat.recog$Response.Response == dat.recog$key)
#now for global
dat2.recog = subset(dat2,
dat2$Procedure.Trial.Type == "Likert")
dat2.recog$Response.Response[dat2.recog$Response.Response == "NO"] = "Non-Presented"
dat2.recog$Response.Response[dat2.recog$Response.Response == "YES"] = "Presented"
dat2.recog$key = dat2.recog$Stimuli.Stimuli.Notes
dat2.recog$key[dat2.recog$key == "Critical Lure"] = "Non-Presented"
dat2.recog$key[dat2.recog$key == "List Item Control"] = "Non-Presented"
dat2.recog$key[dat2.recog$key == "Critical Lure Control"] = "Non-Presented"
dat2.recog$key[dat2.recog$key == "List Item"] = "Presented"
dat2.recog$scored = as.numeric(dat2.recog$Response.Response == dat2.recog$key)
#and the read group
dat3.recog = subset(dat3,
dat3$Procedure.Trial.Type == "Likert")
dat3.recog$Response.Response[dat3.recog$Response.Response == "NO"] = "Non-Presented"
dat3.recog$Response.Response[dat3.recog$Response.Response == "YES"] = "Presented"
dat3.recog$key = dat3.recog$Stimuli.Stimuli.Notes
dat3.recog$key[dat3.recog$key == "Critical Lure"] = "Non-Presented"
dat3.recog$key[dat3.recog$key == "List Item Control"] = "Non-Presented"
dat3.recog$key[dat3.recog$key == "Critical Lure Control"] = "Non-Presented"
dat3.recog$key[dat3.recog$key == "List Item"] = "Presented"
dat3.recog$scored = as.numeric(dat3.recog$Response.Response == dat3.recog$key)
####cleanup and write recog data to file####
##drop extra columns
dat.recog = dat.recog[ , -c(2:6, 8:16)]
dat.recog$encoding = rep("item")
dat.recog = dat.recog[ c(1, 2, 4, 3)]
#write.csv(recog_item, file = "JOL Item.csv", row.names = F)
#write.csv(recog_global, file = "JOL Global.csv", row.names = F)
#write.csv(recog_read, file = "Control Group.csv", row.names = F)
####Build JOL data####
####This script will be used to read in everything and set EX 2data up for processing####
##Start by gathering all of the data
#Item
setwd("C:/Users/nickm/OneDrive/Documents/GitHub/DRM-Reactivity/3 Output/Ex 2B/Item")
files = list.files(pattern = "*.csv")
#Put them in one dataframe. First apply read.csv, then rbind
dat = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
#get the number of participants
length(unique(dat$Username))
#List
setwd("C:/Users/nickm/OneDrive/Documents/GitHub/DRM-Reactivity/3 Output/Ex 2B/List")
files2 = list.files(pattern = "*.csv")
#Put them in one dataframe. First apply read.csv, then rbind
dat2 = do.call(rbind, lapply(files2, function(x) read.csv(x, stringsAsFactors = FALSE)))
#get the number of participants
length(unique(dat2$Username))
#Read
setwd("C:/Users/nickm/OneDrive/Documents/GitHub/DRM-Reactivity/3 Output/Ex 2B/Read")
files3 = list.files(pattern = "*.csv")
#Put them in one dataframe. First apply read.csv, then rbind
dat3 = do.call(rbind, lapply(files3, function(x) read.csv(x, stringsAsFactors = FALSE)))
#get the number of participants
length(unique(dat3$Username))
#Now move back to the original folder
#This is where I'll store the combined final output for scoring
setwd('..')
####Clean up the data files####
##Drop unused columns
dat = dat[ , -c(2:7, 9:10, 12, 20:23, 28:33, 35)]
dat2 = dat2[ , -c(2:7, 9:10, 12, 20:23, 28:33, 35)]
dat3 = dat3[ , -c(2:7, 9:10, 12, 20:23, 28:34)]
#Now remove instruction trials
dat = subset(dat,
dat$Procedure.Trial.Type != "Instruct")
dat2 = subset(dat2,
dat2$Procedure.Trial.Type != "Instruct")
dat3 = subset(dat3,
dat3$Procedure.Trial.Type != "Instruct")
#Now remove filler task
dat = subset(dat,
dat$Procedure.Trial.Type != "FreeRecall")
dat2 = subset(dat2,
dat2$Procedure.Trial.Type != "FreeRecall")
dat3 = subset(dat3,
dat3$Procedure.Trial.Type != "FreeRecall")
####Score the data####
##Start w/ item
dat.recog = subset(dat,
dat$Procedure.Trial.Type == "Likert")
dat.recog$Response.Response[dat.recog$Response.Response == "NO"] = "Non-Presented"
dat.recog$Response.Response[dat.recog$Response.Response == "YES"] = "Presented"
dat.recog$key = dat.recog$Stimuli.Stimuli.Notes
dat.recog$key[dat.recog$key == "Critical Lure"] = "Non-Presented"
dat.recog$key[dat.recog$key == "List Item Control"] = "Non-Presented"
dat.recog$key[dat.recog$key == "Critical Lure Control"] = "Non-Presented"
dat.recog$key[dat.recog$key == "List Item"] = "Presented"
dat.recog$scored = as.numeric(dat.recog$Response.Response == dat.recog$key)
#now for global
dat2.recog = subset(dat2,
dat2$Procedure.Trial.Type == "Likert")
dat2.recog$Response.Response[dat2.recog$Response.Response == "NO"] = "Non-Presented"
dat2.recog$Response.Response[dat2.recog$Response.Response == "YES"] = "Presented"
dat2.recog$key = dat2.recog$Stimuli.Stimuli.Notes
dat2.recog$key[dat2.recog$key == "Critical Lure"] = "Non-Presented"
dat2.recog$key[dat2.recog$key == "List Item Control"] = "Non-Presented"
dat2.recog$key[dat2.recog$key == "Critical Lure Control"] = "Non-Presented"
dat2.recog$key[dat2.recog$key == "List Item"] = "Presented"
dat2.recog$scored = as.numeric(dat2.recog$Response.Response == dat2.recog$key)
#and the read group
dat3.recog = subset(dat3,
dat3$Procedure.Trial.Type == "Likert")
dat3.recog$Response.Response[dat3.recog$Response.Response == "NO"] = "Non-Presented"
dat3.recog$Response.Response[dat3.recog$Response.Response == "YES"] = "Presented"
dat3.recog$key = dat3.recog$Stimuli.Stimuli.Notes
dat3.recog$key[dat3.recog$key == "Critical Lure"] = "Non-Presented"
dat3.recog$key[dat3.recog$key == "List Item Control"] = "Non-Presented"
dat3.recog$key[dat3.recog$key == "Critical Lure Control"] = "Non-Presented"
dat3.recog$key[dat3.recog$key == "List Item"] = "Presented"
dat3.recog$scored = as.numeric(dat3.recog$Response.Response == dat3.recog$key)
##invert non-presented
dat.recog.np = subset(dat.recog,
dat.recog$key == "Non-Presented")
View(dat.recog.np)
dat.recog.np$scored = (1 - dat.recog.np$scored) * - 1
####This script will be used to read in everything and set EX 2data up for processing####
##Start by gathering all of the data
#Item
setwd("C:/Users/nickm/OneDrive/Documents/GitHub/DRM-Reactivity/3 Output/Ex 2B/Item")
files = list.files(pattern = "*.csv")
#Put them in one dataframe. First apply read.csv, then rbind
dat = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
#get the number of participants
length(unique(dat$Username))
#List
setwd("C:/Users/nickm/OneDrive/Documents/GitHub/DRM-Reactivity/3 Output/Ex 2B/List")
files2 = list.files(pattern = "*.csv")
#Put them in one dataframe. First apply read.csv, then rbind
dat2 = do.call(rbind, lapply(files2, function(x) read.csv(x, stringsAsFactors = FALSE)))
#get the number of participants
length(unique(dat2$Username))
#Read
setwd("C:/Users/nickm/OneDrive/Documents/GitHub/DRM-Reactivity/3 Output/Ex 2B/Read")
files3 = list.files(pattern = "*.csv")
#Put them in one dataframe. First apply read.csv, then rbind
dat3 = do.call(rbind, lapply(files3, function(x) read.csv(x, stringsAsFactors = FALSE)))
#get the number of participants
length(unique(dat3$Username))
#Now move back to the original folder
#This is where I'll store the combined final output for scoring
setwd('..')
####Clean up the data files####
##Drop unused columns
dat = dat[ , -c(2:7, 9:10, 12, 20:23, 28:33, 35)]
dat2 = dat2[ , -c(2:7, 9:10, 12, 20:23, 28:33, 35)]
dat3 = dat3[ , -c(2:7, 9:10, 12, 20:23, 28:34)]
#Now remove instruction trials
dat = subset(dat,
dat$Procedure.Trial.Type != "Instruct")
dat2 = subset(dat2,
dat2$Procedure.Trial.Type != "Instruct")
dat3 = subset(dat3,
dat3$Procedure.Trial.Type != "Instruct")
#Now remove filler task
dat = subset(dat,
dat$Procedure.Trial.Type != "FreeRecall")
dat2 = subset(dat2,
dat2$Procedure.Trial.Type != "FreeRecall")
dat3 = subset(dat3,
dat3$Procedure.Trial.Type != "FreeRecall")
####Score the data####
##Start w/ item
dat.recog = subset(dat,
dat$Procedure.Trial.Type == "Likert")
dat.recog$Response.Response[dat.recog$Response.Response == "NO"] = "Non-Presented"
dat.recog$Response.Response[dat.recog$Response.Response == "YES"] = "Presented"
dat.recog$key = dat.recog$Stimuli.Stimuli.Notes
dat.recog$key[dat.recog$key == "Critical Lure"] = "Non-Presented"
dat.recog$key[dat.recog$key == "List Item Control"] = "Non-Presented"
dat.recog$key[dat.recog$key == "Critical Lure Control"] = "Non-Presented"
dat.recog$key[dat.recog$key == "List Item"] = "Presented"
dat.recog$scored = as.numeric(dat.recog$Response.Response == dat.recog$key)
#now for global
dat2.recog = subset(dat2,
dat2$Procedure.Trial.Type == "Likert")
dat2.recog$Response.Response[dat2.recog$Response.Response == "NO"] = "Non-Presented"
dat2.recog$Response.Response[dat2.recog$Response.Response == "YES"] = "Presented"
dat2.recog$key = dat2.recog$Stimuli.Stimuli.Notes
dat2.recog$key[dat2.recog$key == "Critical Lure"] = "Non-Presented"
dat2.recog$key[dat2.recog$key == "List Item Control"] = "Non-Presented"
dat2.recog$key[dat2.recog$key == "Critical Lure Control"] = "Non-Presented"
dat2.recog$key[dat2.recog$key == "List Item"] = "Presented"
dat2.recog$scored = as.numeric(dat2.recog$Response.Response == dat2.recog$key)
#and the read group
dat3.recog = subset(dat3,
dat3$Procedure.Trial.Type == "Likert")
dat3.recog$Response.Response[dat3.recog$Response.Response == "NO"] = "Non-Presented"
dat3.recog$Response.Response[dat3.recog$Response.Response == "YES"] = "Presented"
dat3.recog$key = dat3.recog$Stimuli.Stimuli.Notes
dat3.recog$key[dat3.recog$key == "Critical Lure"] = "Non-Presented"
dat3.recog$key[dat3.recog$key == "List Item Control"] = "Non-Presented"
dat3.recog$key[dat3.recog$key == "Critical Lure Control"] = "Non-Presented"
dat3.recog$key[dat3.recog$key == "List Item"] = "Presented"
dat3.recog$scored = as.numeric(dat3.recog$Response.Response == dat3.recog$key)
##invert non-presented
dat.recog.np = subset(dat.recog,
dat.recog$key == "Non-Presented")
dat.recog.np$scored = (1 - dat.recog.np$scored)
dat.recog.p = subset(dat.recog,
dat.recog$key == "Presented")
dat.recog = rbind(dat.recog.p, dat.recog.np)
#global
dat2.recog.np = subset(dat2.recog,
dat2.recog$key == "Non-Presented")
dat2.recog.p = subset(dat2.recog,
dat2.recog$key == "Presented")
dat2.recog.np$scored = (1 - dat2.recog.np$scored)
dat2.recog = rbind(dat2.recog.p, dat.recog.np)
#read
dat3.recog.np = subset(dat3.recog,
dat3.recog$key == "Non-Presented")
dat3.recog.p = subset(dat3.recog,
dat3.recog$key == "Presented")
dat3.recog.np$scored = (1 - dat3.recog.np$scored)
dat3.recog = rbind(dat3.recog.p, dat.recog.np)
dat3.recog = rbind(dat3.recog.p, dat3.recog.np)
####cleanup and write recog data to file####
##drop extra columns
#Item
dat.recog = dat.recog[ , -c(2:6, 8:16)]
dat.recog$encoding = rep("item")
dat.recog = dat.recog[ c(1, 2, 4, 3)]
#Global
dat2.recog = dat2.recog[ , -c(2:6, 8:16)]
dat2.recog$encoding = rep("item")
dat2.recog = dat2.recog[ c(1, 2, 4, 3)]
View(dat3.recog)
#Read
dat3.recog = dat3.recog[ , -c(2:6, 8:15)]
dat3.recog$encoding = rep("read")
dat3.recog = dat3.recog[ c(1, 2, 4, 3)]
View(dat3.recog)
View(dat2.recog.p)
View(dat2.recog)
write.csv(dat.recog, file = "JOL Item.csv", row.names = F)
write.csv(dat2.recog, file = "JOL Global.csv", row.names = F)
write.csv(dat3.recog, file = "Control Group.csv", row.names = F)
####This script will be used to read in everything and set EX 2data up for processing####
##Start by gathering all of the data
#Item
setwd("C:/Users/nickm/OneDrive/Documents/GitHub/DRM-Reactivity/3 Output/Ex 2B/Item")
files = list.files(pattern = "*.csv")
#Put them in one dataframe. First apply read.csv, then rbind
dat = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
#get the number of participants
length(unique(dat$Username))
#List
setwd("C:/Users/nickm/OneDrive/Documents/GitHub/DRM-Reactivity/3 Output/Ex 2B/List")
files2 = list.files(pattern = "*.csv")
#Put them in one dataframe. First apply read.csv, then rbind
dat2 = do.call(rbind, lapply(files2, function(x) read.csv(x, stringsAsFactors = FALSE)))
#get the number of participants
length(unique(dat2$Username))
#Read
setwd("C:/Users/nickm/OneDrive/Documents/GitHub/DRM-Reactivity/3 Output/Ex 2B/Read")
files3 = list.files(pattern = "*.csv")
#Put them in one dataframe. First apply read.csv, then rbind
dat3 = do.call(rbind, lapply(files3, function(x) read.csv(x, stringsAsFactors = FALSE)))
#get the number of participants
length(unique(dat3$Username))
#Now move back to the original folder
#This is where I'll store the combined final output for scoring
setwd('..')
####Clean up the data files####
##Drop unused columns
dat = dat[ , -c(2:7, 9:10, 12, 20:23, 28:33, 35)]
dat2 = dat2[ , -c(2:7, 9:10, 12, 20:23, 28:33, 35)]
dat3 = dat3[ , -c(2:7, 9:10, 12, 20:23, 28:34)]
#Now remove instruction trials
dat = subset(dat,
dat$Procedure.Trial.Type != "Instruct")
dat2 = subset(dat2,
dat2$Procedure.Trial.Type != "Instruct")
dat3 = subset(dat3,
dat3$Procedure.Trial.Type != "Instruct")
#Now remove filler task
dat = subset(dat,
dat$Procedure.Trial.Type != "FreeRecall")
dat2 = subset(dat2,
dat2$Procedure.Trial.Type != "FreeRecall")
dat3 = subset(dat3,
dat3$Procedure.Trial.Type != "FreeRecall")
####Score the data####
##Start w/ item
dat.recog = subset(dat,
dat$Procedure.Trial.Type == "Likert")
dat.recog$Response.Response[dat.recog$Response.Response == "NO"] = "Non-Presented"
dat.recog$Response.Response[dat.recog$Response.Response == "YES"] = "Presented"
dat.recog$key = dat.recog$Stimuli.Stimuli.Notes
dat.recog$key[dat.recog$key == "Critical Lure"] = "Non-Presented"
dat.recog$key[dat.recog$key == "List Item Control"] = "Non-Presented"
dat.recog$key[dat.recog$key == "Critical Lure Control"] = "Non-Presented"
dat.recog$key[dat.recog$key == "List Item"] = "Presented"
dat.recog$scored = as.numeric(dat.recog$Response.Response == dat.recog$key)
#now for global
dat2.recog = subset(dat2,
dat2$Procedure.Trial.Type == "Likert")
dat2.recog$Response.Response[dat2.recog$Response.Response == "NO"] = "Non-Presented"
dat2.recog$Response.Response[dat2.recog$Response.Response == "YES"] = "Presented"
dat2.recog$key = dat2.recog$Stimuli.Stimuli.Notes
dat2.recog$key[dat2.recog$key == "Critical Lure"] = "Non-Presented"
dat2.recog$key[dat2.recog$key == "List Item Control"] = "Non-Presented"
dat2.recog$key[dat2.recog$key == "Critical Lure Control"] = "Non-Presented"
dat2.recog$key[dat2.recog$key == "List Item"] = "Presented"
dat2.recog$scored = as.numeric(dat2.recog$Response.Response == dat2.recog$key)
#and the read group
dat3.recog = subset(dat3,
dat3$Procedure.Trial.Type == "Likert")
dat3.recog$Response.Response[dat3.recog$Response.Response == "NO"] = "Non-Presented"
dat3.recog$Response.Response[dat3.recog$Response.Response == "YES"] = "Presented"
dat3.recog$key = dat3.recog$Stimuli.Stimuli.Notes
dat3.recog$key[dat3.recog$key == "Critical Lure"] = "Non-Presented"
dat3.recog$key[dat3.recog$key == "List Item Control"] = "Non-Presented"
dat3.recog$key[dat3.recog$key == "Critical Lure Control"] = "Non-Presented"
dat3.recog$key[dat3.recog$key == "List Item"] = "Presented"
dat3.recog$scored = as.numeric(dat3.recog$Response.Response == dat3.recog$key)
##invert non-presented
#item
dat.recog.np = subset(dat.recog,
dat.recog$key == "Non-Presented")
dat.recog.p = subset(dat.recog,
dat.recog$key == "Presented")
dat.recog.np$scored = (1 - dat.recog.np$scored)
dat.recog = rbind(dat.recog.p, dat.recog.np)
#global
dat2.recog.np = subset(dat2.recog,
dat2.recog$key == "Non-Presented")
dat2.recog.p = subset(dat2.recog,
dat2.recog$key == "Presented")
dat2.recog.np$scored = (1 - dat2.recog.np$scored)
dat2.recog = rbind(dat2.recog.p, dat.recog.np)
#read
dat3.recog.np = subset(dat3.recog,
dat3.recog$key == "Non-Presented")
dat3.recog.p = subset(dat3.recog,
dat3.recog$key == "Presented")
dat3.recog.np$scored = (1 - dat3.recog.np$scored)
dat3.recog = rbind(dat3.recog.p, dat3.recog.np)
####cleanup and write recog data to file####
##drop extra columns
#Item
dat.recog = dat.recog[ , -c(2:6, 8:16)]
dat.recog$encoding = rep("item")
dat.recog = dat.recog[ c(1, 2, 4, 3)]
#Global
dat2.recog = dat2.recog[ , -c(2:6, 8:16)]
dat2.recog$encoding = rep("global")
dat2.recog = dat2.recog[ c(1, 2, 4, 3)]
#Read
dat3.recog = dat3.recog[ , -c(2:6, 8:15)]
dat3.recog$encoding = rep("read")
dat3.recog = dat3.recog[ c(1, 2, 4, 3)]
#write.csv(dat.recog, file = "JOL Item.csv", row.names = F)
#write.csv(dat2.recog, file = "JOL Global.csv", row.names = F)
#write.csv(dat3.recog, file = "Control Group.csv", row.names = F)
length(unique(dat2.recog$Username))
length(unique(dat2.recog.np$Username))
####This script will be used to read in everything and set EX 2data up for processing####
##Start by gathering all of the data
#Item
setwd("C:/Users/nickm/OneDrive/Documents/GitHub/DRM-Reactivity/3 Output/Ex 2B/Item")
files = list.files(pattern = "*.csv")
#Put them in one dataframe. First apply read.csv, then rbind
dat = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
#get the number of participants
length(unique(dat$Username))
#List
setwd("C:/Users/nickm/OneDrive/Documents/GitHub/DRM-Reactivity/3 Output/Ex 2B/List")
files2 = list.files(pattern = "*.csv")
#Put them in one dataframe. First apply read.csv, then rbind
dat2 = do.call(rbind, lapply(files2, function(x) read.csv(x, stringsAsFactors = FALSE)))
#get the number of participants
length(unique(dat2$Username))
#Read
setwd("C:/Users/nickm/OneDrive/Documents/GitHub/DRM-Reactivity/3 Output/Ex 2B/Read")
files3 = list.files(pattern = "*.csv")
#Put them in one dataframe. First apply read.csv, then rbind
dat3 = do.call(rbind, lapply(files3, function(x) read.csv(x, stringsAsFactors = FALSE)))
#get the number of participants
length(unique(dat3$Username))
#Now move back to the original folder
#This is where I'll store the combined final output for scoring
setwd('..')
####Clean up the data files####
##Drop unused columns
dat = dat[ , -c(2:7, 9:10, 12, 20:23, 28:33, 35)]
dat2 = dat2[ , -c(2:7, 9:10, 12, 20:23, 28:33, 35)]
dat3 = dat3[ , -c(2:7, 9:10, 12, 20:23, 28:34)]
#Now remove instruction trials
dat = subset(dat,
dat$Procedure.Trial.Type != "Instruct")
dat2 = subset(dat2,
dat2$Procedure.Trial.Type != "Instruct")
dat3 = subset(dat3,
dat3$Procedure.Trial.Type != "Instruct")
#Now remove filler task
dat = subset(dat,
dat$Procedure.Trial.Type != "FreeRecall")
dat2 = subset(dat2,
dat2$Procedure.Trial.Type != "FreeRecall")
dat3 = subset(dat3,
dat3$Procedure.Trial.Type != "FreeRecall")
####Score the data####
##Start w/ item
dat.recog = subset(dat,
dat$Procedure.Trial.Type == "Likert")
dat.recog$Response.Response[dat.recog$Response.Response == "NO"] = "Non-Presented"
dat.recog$Response.Response[dat.recog$Response.Response == "YES"] = "Presented"
dat.recog$key = dat.recog$Stimuli.Stimuli.Notes
dat.recog$key[dat.recog$key == "Critical Lure"] = "Non-Presented"
dat.recog$key[dat.recog$key == "List Item Control"] = "Non-Presented"
dat.recog$key[dat.recog$key == "Critical Lure Control"] = "Non-Presented"
dat.recog$key[dat.recog$key == "List Item"] = "Presented"
dat.recog$scored = as.numeric(dat.recog$Response.Response == dat.recog$key)
#now for global
dat2.recog = subset(dat2,
dat2$Procedure.Trial.Type == "Likert")
dat2.recog$Response.Response[dat2.recog$Response.Response == "NO"] = "Non-Presented"
dat2.recog$Response.Response[dat2.recog$Response.Response == "YES"] = "Presented"
dat2.recog$key = dat2.recog$Stimuli.Stimuli.Notes
dat2.recog$key[dat2.recog$key == "Critical Lure"] = "Non-Presented"
dat2.recog$key[dat2.recog$key == "List Item Control"] = "Non-Presented"
dat2.recog$key[dat2.recog$key == "Critical Lure Control"] = "Non-Presented"
dat2.recog$key[dat2.recog$key == "List Item"] = "Presented"
dat2.recog$scored = as.numeric(dat2.recog$Response.Response == dat2.recog$key)
#and the read group
dat3.recog = subset(dat3,
dat3$Procedure.Trial.Type == "Likert")
dat3.recog$Response.Response[dat3.recog$Response.Response == "NO"] = "Non-Presented"
dat3.recog$Response.Response[dat3.recog$Response.Response == "YES"] = "Presented"
dat3.recog$key = dat3.recog$Stimuli.Stimuli.Notes
dat3.recog$key[dat3.recog$key == "Critical Lure"] = "Non-Presented"
dat3.recog$key[dat3.recog$key == "List Item Control"] = "Non-Presented"
dat3.recog$key[dat3.recog$key == "Critical Lure Control"] = "Non-Presented"
dat3.recog$key[dat3.recog$key == "List Item"] = "Presented"
dat3.recog$scored = as.numeric(dat3.recog$Response.Response == dat3.recog$key)
##invert non-presented
#item
dat.recog.np = subset(dat.recog,
dat.recog$key == "Non-Presented")
dat.recog.p = subset(dat.recog,
dat.recog$key == "Presented")
dat.recog.np$scored = (1 - dat.recog.np$scored)
dat.recog = rbind(dat.recog.p, dat.recog.np)
#global
dat2.recog.np = subset(dat2.recog,
dat2.recog$key == "Non-Presented")
dat2.recog.p = subset(dat2.recog,
dat2.recog$key == "Presented")
dat2.recog.np$scored = (1 - dat2.recog.np$scored)
dat2.recog = rbind(dat2.recog.p, dat2.recog.np)
#read
dat3.recog.np = subset(dat3.recog,
dat3.recog$key == "Non-Presented")
dat3.recog.p = subset(dat3.recog,
dat3.recog$key == "Presented")
dat3.recog.np$scored = (1 - dat3.recog.np$scored)
dat3.recog = rbind(dat3.recog.p, dat3.recog.np)
####cleanup and write recog data to file####
##drop extra columns
#Item
dat.recog = dat.recog[ , -c(2:6, 8:16)]
dat.recog$encoding = rep("item")
dat.recog = dat.recog[ c(1, 2, 4, 3)]
#Global
dat2.recog = dat2.recog[ , -c(2:6, 8:16)]
dat2.recog$encoding = rep("global")
dat2.recog = dat2.recog[ c(1, 2, 4, 3)]
#Read
dat3.recog = dat3.recog[ , -c(2:6, 8:15)]
dat3.recog$encoding = rep("read")
dat3.recog = dat3.recog[ c(1, 2, 4, 3)]
#write.csv(dat.recog, file = "JOL Item.csv", row.names = F)
#write.csv(dat2.recog, file = "JOL Global.csv", row.names = F)
#write.csv(dat3.recog, file = "Control Group.csv", row.names = F)
length(unique(dat2.recog.np$Username))
length(unique(dat2.recog$Username))
write.csv(dat.recog, file = "JOL Item.csv", row.names = F)
write.csv(dat2.recog, file = "JOL Global.csv", row.names = F)
write.csv(dat3.recog, file = "Control Group.csv", row.names = F)
